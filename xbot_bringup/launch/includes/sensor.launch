<!-- asus sensor  driver-->
<launch>
  <arg name="camera" default="camera"/>
  <arg name="publish_tf" default="true"/>
  <arg name="3d_sensor" default="asus_xtion_pro"/>

  <!-- Factory-calibrated depth registration -->
  <arg name="depth_registration" default="true"/>
  <arg if="$(arg depth_registration)" name="depth" value="depth_registered" />
  <arg unless="$(arg depth_registration)" name="depth" value="depth" />

  <!-- Processing Modules -->
  <arg name="rgb_processing" default="true"/>
  <arg name="ir_processing" default="true"/>
  <arg name="depth_processing" default="true"/>
  <arg name="depth_registered_processing" default="true"/>
  <arg name="disparity_processing" default="true"/>
  <arg name="disparity_registered_processing" default="true"/>
  <arg name="scan_processing" default="true"/>

  <!-- Worker threads for the nodelet manager -->
  <arg name="num_worker_threads" default="4" />

  <!-- Laserscan topic -->
  <arg name="scan_topic" default="asus_scan"/>

  <include file="$(find xbot_bringup)/launch/includes/$(arg 3d_sensor).launch.xml">
  <arg name="camera" value="$(arg camera)"/>
  <arg name="publish_tf" value="$(arg publish_tf)"/>
  <arg name="depth_registration" value="$(arg depth_registration)"/>
  <arg name="num_worker_threads" value="$(arg num_worker_threads)" />

  <!-- Processing Modules -->
  <arg name="rgb_processing" value="$(arg rgb_processing)"/>
  <arg name="ir_processing" value="$(arg ir_processing)"/>
  <arg name="depth_processing" value="$(arg depth_processing)"/>
  <arg name="depth_registered_processing" value="$(arg depth_registered_processing)"/>
  <arg name="disparity_processing" value="$(arg disparity_processing)"/>
  <arg name="disparity_registered_processing" value="$(arg disparity_registered_processing)"/>

  </include>
  <!-- Laserscan topic -->
  <arg name="scan_height"      default="200"/>
  <!--Laserscan-->
  <group if="$(arg scan_processing)">
    <node pkg="nodelet" type="nodelet" name="depthimage_to_laserscan" args="load depthimage_to_laserscan/DepthImageToLaserScanNodelet $(arg camera)/$(arg camera)_nodelet_manager">
      <param name="scan_height" value="$(arg scan_height)" />
      <param name="output_frame_id" value="/$(arg camera)_depth_frame"/>
      <param name="range_min" value="0.2"/>
      <remap from="image" to="$(arg camera)/depth_registered/image_raw"/>
      <remap from="scan" to="asus_scan"/>
      <remap from="$(arg camera)/image" to="$(arg camera)/depth_registered/image_raw"/>
      <remap from="$(arg camera)/scan" to="asus_scan"/>
    </node>
  </group>

</launch>
